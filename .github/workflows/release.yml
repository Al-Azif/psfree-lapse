name: Build release

on:
  push:
    tags:
      - "v*" # Only run when a tag like v1.0, v2.1.3, etc. is pushed

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/kpatch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build kpatch binaries
        run: make
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kpatch
          path: src/kpatch/*.bin
      
      - name: Download latest hen.bin
        run: |
          hen_api_url="https://api.github.com/repos/Scene-Collective/ps4-hen/releases"
          hen_bin_url=$(curl -s "$hen_api_url" | jq -r '[.[] | .assets[] | select(.name=="hen.bin")][0].browser_download_url')
          echo "Downloading hen.bin from $hen_bin_url"
          curl -L -o ../payload.bin "$hen_bin_url"

      - name: Archive repository
        run: |
          cd $GITHUB_WORKSPACE
          VERSION="${GITHUB_REF##*/}"
          VERSION="${VERSION#v}"
          zip -r -9 "psfree-lapse-${VERSION}.zip" .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: psfree-lapse-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare dist folder
        run: |
          mkdir -p dist
          cp -r src/* dist/
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: kpatch
          path: dist/kpatch

      - name: Download latest hen.bin
        run: |
          hen_api_url="https://api.github.com/repos/Scene-Collective/ps4-hen/releases"
          hen_bin_url=$(curl -s "$hen_api_url" | jq -r '[.[] | .assets[] | select(.name=="hen.bin")][0].browser_download_url')
          echo "Downloading hen.bin from $hen_bin_url"
          curl -L -o dist/payload.bin "$hen_bin_url"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

